[metadata]
name = openstack-congress
summary = Congress: The open policy framework for the cloud.
description-file =
    README.rst
author = OpenStack
author-email = openstack-dev@lists.openstack.org
home-page = https://docs.openstack.org/congress/latest/
classifier =
    Environment :: OpenStack
    Intended Audience :: Information Technology
    Intended Audience :: System Administrators
    License :: OSI Approved :: Apache Software License
    Operating System :: POSIX :: Linux
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5

[files]
packages =
    congress
    antlr3runtime/Python/antlr3
    antlr3runtime/Python3/antlr3
data_files =
    etc/congress =
        etc/api-paste.ini

[global]
setup-hooks =
    pbr.hooks.setup_hook

[pbr]
autodoc_index_modules = True
autodoc_exclude_modules =
     congress.db.migration.alembic_migrations.*
     thirdparty.*
     antlr3runtime.*
     congress.datalog.Python2.*
     congress.datalog.Python3.*
warnerrors = True

[entry_points]
oslo.config.opts =
    congress = congress.opts:list_opts
    congress-agent = congress.cfg_validator.agent.opts:list_opts

oslo.config.opts.defaults =
    congress = congress.common.config:set_config_defaults

oslo.policy.policies =
    # With the move of default policy in code list_rules returns a list of
    # the default defined polices.
    congress = congress.common.policies:list_rules

console_scripts =
    congress-server = congress.server.congress_server:main
    congress-db-manage = congress.db.migration.cli:main
    congress-cfg-validator-agt = congress.cfg_validator.agent.agent:main

[build_sphinx]
all_files = 1
build-dir = doc/build
source-dir = doc/source
warning-is-error = 1

[upload_sphinx]
upload-dir = doc/build/html

[compile_catalog]
directory = congress/locale
domain = congress

[update_catalog]
domain = congress
output_dir = congress/locale
input_file = congress/locale/congress.pot

[extract_messages]
keywords = _ gettext ngettext l_ lazy_gettext
mapping_file = babel.cfg
output_file = congress/locale/congress.pot
