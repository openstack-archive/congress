[tox]
minversion = 2.0
skipsdist = True
envlist = py37,py36,pep8,genpolicy

[testenv]
basepython = python3
usedevelop = True

install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/master} -U {opts} {packages}
whitelist_externals = find
                      rm
setenv =
   VIRTUAL_ENV={envdir}
   LANG=en_US.UTF-8
   LANGUAGE=en_US
   LC_ALL=en_US.utf-8
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
 find . -type f -name "*.py[c|o]" -delete
 stestr run --slowest --concurrency=1 {posargs}

[testenv:pep8]
usedevelop = False
deps =
commands = {toxinidir}/tools/pip-install-single-req.sh test-requirements.txt hacking
           flake8

[testenv:venv]
commands = {posargs}

[testenv:cover]
setenv =
    PYTHON=coverage run --source congress --parallel-mode
commands =
  coverage erase
  find . -type f -name "*.pyc" -delete
  stestr run '^(?!congress\.tests\.haht\.test_congress_haht.*){posargs}'
  coverage combine
  coverage html -d cover
  coverage xml -o cover/coverage.xml
  coverage report

[testenv:debug]
commands = oslo_debug_helper -t congress/tests {posargs}

[testenv:bench]
setenv =
   TEST_BENCHMARK=true
   VIRTUAL_ENV={envdir}
   LANG=en_US.UTF-8
   LANGUAGE=en_US
   LC_ALL=en_US.utf-8
commands = stestr run --concurrency=1 'test_benchmark {posargs}'
           stestr slowest --all

[flake8]
show-source = True
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build,*thirdparty/*,CongressLexer.py,CongressParser.py,contrib/*

[testenv:genconfig]
deps =
commands = {toxinidir}/tools/pip-install-single-req.sh requirements.txt oslo.config
           oslo-config-generator --config-file=etc/congress-config-generator.conf
           oslo-config-generator --config-file=etc/congress-agent-config-generator.conf

[testenv:genpolicy]
commands = oslopolicy-sample-generator --config-file etc/congress-policy-generator.conf

[testenv:docs]
setenv = PYTHONHASHSEED=0
deps = -r{toxinidir}/doc/requirements.txt
       -r{toxinidir}/requirements.txt
commands = rm -rf doc/build doc/source/api
           sphinx-build -W -b html doc/source doc/build/html

[testenv:pdf-docs]
envdir = {toxworkdir}/docs
deps = {[testenv:docs]deps}
whitelist_externals =
  make
commands =
  sphinx-build -W -b latex doc/source doc/build/pdf
  make -C doc/build/pdf

[testenv:releasenotes]
deps = -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:bindep]
# Do not install any requirements. We want this to be fast and work even if
# system dependencies are missing, since it's used to tell you what system
# dependencies are missing! This also means that bindep must be installed
# separately, outside of the requirements files, and develop mode disabled
# explicitly to avoid unnecessarily installing the checked-out repo too (this
# further relies on "tox.skipsdist = True" above).
deps = bindep
commands = bindep test
usedevelop = False

[testenv:lower-constraints]
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
